--- include/ode/common.h	Mon Jun  2 23:09:37 2008
+++ include/ode/common.h	Wed Aug  8 08:43:51 2012
@@ -517,6 +517,7 @@
   dVector3 t1;		/* torque applied to body 1 */
   dVector3 f2;		/* force applied to body 2 */
   dVector3 t2;		/* torque applied to body 2 */
+  dReal lambda;
 } dJointFeedback;
 
 
--- ode/src/step.cpp	2018-12-09 21:04:03
+++ ode/src/step.cpp	2025-02-20 12:10:43
@@ -478,6 +478,8 @@
         currLambda += RLE__RHS_LAMBDA_MAX;
     }
     if (fb != NULL) {
+        // read motor force limits if available
+        if(infom >= 6) fb->lambda = *(rowRhsLambda+RLE_LAMBDA+5*RLE__RHS_LAMBDA_MAX);
         if (jointBodyIndex == dJCB__MIN) {
             fb->f1[dV3E_X] = sumLX;
             fb->f1[dV3E_Y] = sumLY;
--- ode/src/quickstep.cpp	2018-12-09 21:04:03
+++ ode/src/quickstep.cpp	2025-02-20 12:09:53
@@ -2992,7 +3003,8 @@
 #endif
 
                     dJointFeedback *fb = joint->feedback;
-
+                    // read motor force limits if available
+                    if(fb_infom >= 6) fb->lambda = lambdacurr[5];
                     if (joint->node[1].body) {
                         Multiply1_12q1 (data, Jcopycurr + JCE__J2_MIN, lambdacurr, fb_infom);
                         dSASSERT(JCE__MAX == 12);
