diff --git CMakeLists.txt CMakeLists.txt
index 525320f..8c4d11f 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -5,7 +5,10 @@ find_package(Rock)
 rock_init(orocos_cpp 0.1)
 
 SET( CMAKE_CXX_FLAGS  "${CMAKE_CXX_FLAGS} -std=c++0x" )
-
-set(OROCOS_TARGET "gnulinux")
+if(APPLE)
+  set(OROCOS_TARGET "macosx")
+else(APPLE)
+  set(OROCOS_TARGET "gnulinux")
+endif(APPLE)
 rock_standard_layout()
 
diff --git src/CMakeLists.txt src/CMakeLists.txt
index 9118ffe..78c3a4b 100644
--- src/CMakeLists.txt
+++ src/CMakeLists.txt
@@ -1,4 +1,10 @@
 find_package( Boost COMPONENTS thread system filesystem regex)
+
+set(OROCOS_RTT_MQUEUE orocos-rtt-mqueue-${OROCOS_TARGET})
+if(APPLE)
+  unset(OROCOS_RTT_MQUEUE)
+endif()
+
 rock_library(orocos_cpp
     SOURCES 
         ConfigurationHelper.cpp
@@ -31,7 +37,7 @@ rock_library(orocos_cpp
         orocos_cpp_base
         rtt_typelib-${OROCOS_TARGET}
         orocos-rtt-${OROCOS_TARGET}
-        orocos-rtt-mqueue-${OROCOS_TARGET}
+        ${OROCOS_RTT_MQUEUE}
         orocos-rtt-corba-${OROCOS_TARGET}
         typelib
         lib_config
diff --git src/LoggerProxy.cpp src/LoggerProxy.cpp
index 21efbd0..a6db59f 100644
--- src/LoggerProxy.cpp
+++ src/LoggerProxy.cpp
@@ -2,7 +2,10 @@
 
 #include <rtt/typekit/RealTimeTypekit.hpp>
 #include <rtt/transports/corba/TransportPlugin.hpp>
+
+#ifndef __APPLE__
 #include <rtt/transports/mqueue/TransportPlugin.hpp>
+#endif
 
 #include <rtt/types/TypekitPlugin.hpp>
     
diff --git src/Main.cpp src/Main.cpp
index 2185b5a..a8b9abf 100644
--- src/Main.cpp
+++ src/Main.cpp
@@ -5,7 +5,10 @@
 
 #include <rtt/typekit/RealTimeTypekit.hpp>
 #include <rtt/transports/corba/TransportPlugin.hpp>
+
+#ifndef __APPLE__
 #include <rtt/transports/mqueue/TransportPlugin.hpp>
+#endif
 
 #include <rtt/types/TypekitPlugin.hpp>
     
diff --git src/PluginHelper.cpp src/PluginHelper.cpp
index 8854738..313796a 100644
--- src/PluginHelper.cpp
+++ src/PluginHelper.cpp
@@ -103,7 +103,11 @@ bool PluginHelper::loadTypekitAndTransports(const std::string& typekitName)
     LOG_INFO_S << "Loading Typekit and Transport for " << typekitName;
 
     //Supported transport types
+#ifdef __APPLE__
+    static const std::vector<std::string> knownTransports = {"corba", "typelib"};
+#else
     static const std::vector<std::string> knownTransports = {"corba", "mqueue", "typelib"};
+#endif
 
     PkgConfigRegistryPtr pkgreg = PkgConfigRegistry::get();
     RTT::plugin::PluginLoader &loader(*RTT::plugin::PluginLoader::Instance());
@@ -117,10 +121,10 @@ bool PluginHelper::loadTypekitAndTransports(const std::string& typekitName)
         }
         std::string libdir;
         pkg.getVariable("libdir", libdir);
-        if(!loader.loadTypekits(libdir + "/orocos/gnulinux/"))
+        if(!loader.loadTypekits(libdir + "/orocos/"+xstr(OROCOS_TARGET)+"/"))
             throw std::runtime_error("Error, failed to load rtt basis typekits");
 
-        if(!loader.loadPlugins(libdir + "/orocos/gnulinux/"))
+        if(!loader.loadPlugins(libdir + "/orocos/"+xstr(OROCOS_TARGET)+"/"))
             throw std::runtime_error("Error, failed to load rtt basis plugins");
 
         return true;
@@ -137,7 +141,11 @@ bool PluginHelper::loadTypekitAndTransports(const std::string& typekitName)
     tpkg.typekit.getVariable("libdir", libDir);
 
     //Library of typekit is named after a specific file pattern
+#ifdef __APPLE__
+    std::string fname =  libDir + "/lib" + typekitName + "-typekit-" xstr(OROCOS_TARGET) ".dylib";
+#else
     std::string fname =  libDir + "/lib" + typekitName + "-typekit-" xstr(OROCOS_TARGET) ".so";
+#endif
     LOG_DEBUG_S << "Loading typekit from " << fname;
     if(!loader.loadLibrary(fname))
         throw std::runtime_error("Error, could not load typekit for component " + typekitName);
@@ -155,7 +163,11 @@ bool PluginHelper::loadTypekitAndTransports(const std::string& typekitName)
         }
 
         //Library of transport for a typekit is named after a specific file pattern
+#ifdef __APPLE__
+        fname = libDir + "/lib" + typekitName + "-transport-" + transport + "-" xstr(OROCOS_TARGET) ".dylib";
+#else
         fname = libDir + "/lib" + typekitName + "-transport-" + transport + "-" xstr(OROCOS_TARGET) ".so";
+#endif
         LOG_DEBUG_S << "Loading typekit from " << fname;
         if(!loader.loadLibrary(fname))
             throw std::runtime_error("Error, could not load transport " + transport + " for component " + typekitName);
